apply plugin: "java"
apply plugin: "gwt"
apply plugin: "war"
apply plugin: "maven-publish"

sourceSets.test.java.srcDirs = ["tests/"]

dependencies {
    implementation project(":gdx-fireapp-core")
    implementation libs.libgdx.html
    testImplementation libs.junit
    testImplementation libs.gwtmockito
    testImplementation libs.powermock.junit
    testImplementation libs.powermock.junitRule
    testImplementation libs.powermock.api
    testImplementation libs.powermock.xstream
}

gwt {
    gwtVersion = '2.8.0' // Should match the gwt version used for building the gwt backend
    maxHeapSize = "2G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize = "2G"
    src = files(file("src/")) // Needs to be in front of "modules" below.
}

task addSource << {
    sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
}

ext {
    appModuleName = 'GDX Fireapp GWT'
}

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = ["src/"]

eclipse.project {
    name = appName + "-html"
}

apply from: "" + project.rootDir + "/gradle/javadoc.gradle"
apply from: "" + project.rootDir + "/gradle/pom.gradle"

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    exclude "**/com/badlogic/**"
    classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
    exclude "**/com/badlogic/**"
}

jar {
    from project.sourceSets.main.allSource
    exclude "**/com/badlogic/**"
    from project.sourceSets.main.output
    exclude "**/com/badlogic/**"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.group
            version = rootProject.version
            artifactId = 'gdx-fireapp-html'
            artifact jar
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', libraryDescription)
                root.appendNode('name', libraryName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

apply from: "" + project.rootDir + "/gradle/bintray.gradle"